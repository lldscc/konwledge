//声明变量关键字：var、let、const

// 1.全局作用域
// 全局声明的变量拥有全局作用域，可以在代码的任何地方被访问。
// 如果在块外声明声明，那么 var 和 let 也很相似。
// 它们都拥有全局作用域：

// 2.函数作用域
// 局部（函数内）声明的变量拥有函数作用域。
// 在函数内声明变量时，使用 var 和 let 很相似。
// 它们都有函数作用域：

//3.html中的作用域
// 使用 JavaScript 的情况下，全局作用域是 JavaScript 环境。
// 在 HTML 中，全局作用域是 window 对象。
// 通过 var 关键词定义的全局变量属于 window 对象
// 通过 let 关键词定义的全局变量不属于 window 对象
// 4.块作用域
{
  var x = 10;
}
// 此处可以使用 x
{
  let y = 10;
}
// 此处不可以使用 y

// 5.重新声明变量
// 5.1 var 使用 var 关键字重新声明变量会带来问题。在块中重新声明变量也将重新声明块外的变量：
var x = 10;
// 此处 x 为 10
{
  var x = 6;
  // 此处 x 为 6
}
// 此处 x 为 6
// 5.2 let 使用 let 关键字重新声明变量可以解决这个问题。在块中重新声明变量不会重新声明块外的变量：
var x = 10;
// 此处 x 为 10
{
  let x = 6;
  // 此处 x 为 6
}
// 此处 x 为 10
//6. 循环中的块作用域
var i = 7;
for (var i = 0; i < 10; i++) {}
console.log(i); // 输出 10

let j = 7;
for (let j = 0; j < 10; j++) {}
console.log(j); // 输出 7
// const 声明的变量不能被重新赋值，也不能重新声明。
// 变量必须在声明时赋值
// const PI  = 3.14159265359
